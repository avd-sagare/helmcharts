image:
  repository: "cp.icr.io/cp/cp4a/odm"
  tag: 8.10.5.0
  pullPolicy: IfNotPresent
  pullSecrets: 
  arch: "amd64"

serviceAccountName: "odm"

service:
  enableTLS: true
  type: ClusterIP
  enableRoute: true
  hostname: ""
  ingress:
    enabled: false
    annotations: # {annotation1: "1",annotation2: "2"}
    tlsHosts: []
    tlsSecretRef:
    host:

decisionServerRuntime:
  enabled: true
  tagOrDigest:
  replicaCount: 1
  loggingRef:
  jvmOptionsRef: custom-dsr-jvm-options
  xuConfigRef:
  extendRoleMapping: false
  contextRoot:
  resources:
    requests:
      cpu: 500m
      memory: 512Mi
    limits:
      cpu: 2
      memory: 4096Mi

decisionServerConsole:
  tagOrDigest:
  loggingRef:
  jvmOptionsRef: custom-dsc-jvm-options
  extendRoleMapping: false
  title:
  description:
  contextRoot:
  resources:
    requests:
      cpu: 500m
      memory: 512Mi
    limits:
      cpu: 2
      memory: 1024Mi

decisionCenter:
  enabled: true
  tagOrDigest:
  persistenceLocale: en_US
  replicaCount: 1
  customlibPvc:
  loggingRef:
  jvmOptionsRef: custom-dc-jvm-options
  extendRoleMapping: false
  contextRoot:
  resources:
    requests:
      cpu: 500m
      memory: 1500Mi
    limits:
      cpu: 2
      memory: 4096Mi

decisionRunner:
  enabled: true
  tagOrDigest:
  replicaCount: 1
  loggingRef:
  jvmOptionsRef: custom-dr-jvm-options
  extendRoleMapping: false
  contextRoot:
  resources:
    requests:
      cpu: 500m
      memory: 512Mi
    limits:
      cpu: 2
      memory: 4096Mi

internalDatabase:
  databaseName: odmdb
  tagOrDigest:
  user: 
  password: 
  secretCredentials: "db-secret"
  populateSampleData: false
  persistence:
    enabled: true
    useDynamicProvisioning: true
    storageClassName: "ocs-storagecluster-ceph-rbd"
    resources:
      requests:
        storage: 5Gi
  resources:
    requests:
      cpu: 500m
      memory: 512Mi
    limits:
      cpu: 2
      memory: 4096Mi
  runAsUser: 26

externalDatabase:
  type: ""
  serverName: ""
  databaseName: ""
  port: ""
  secretCredentials:
  sslSecretRef:

externalCustomDatabase:
  datasourceRef: 
  driverPvc:

readinessProbe:
  initialDelaySeconds: 5
  periodSeconds: 5
  failureThreshold: 45
  timeoutSeconds: 5

livenessProbe:
  initialDelaySeconds: 300
  periodSeconds: 10
  failureThreshold: 10
  timeoutSeconds: 5

customization:
  securitySecretRef: keystore-secret
  baiEmitterSecretRef:
  authSecretRef: 
  dedicatedNodeLabel:
  runAsUser: 
  kubeVersion: "ODM on K8s"
  productName:
  productID:
  productVersion:
  cloudpakID:
  cloudpakVersion:
  deployForProduction: true
  usageMeteringSecretRef:


dba:
# https://github.ibm.com/dba/cert-kubernetes/blob/master/operator/UMS/README_config_SSL.md
# if no rootCaSecretRef is defined then no keytoolinit init-container
  rootCaSecretRef:
  ldapSslSecretRef:
  passwordSecretRef:
  keytoolInitContainer:
    image:
    imagePullPolicy:
    imagePullSecret:

oidc:
  enabled: false
  serverUrl:
  adminRef:
  redirectUrisRef:
  clientRef:
  provider:
  allowedDomains:

networkPolicy:
  # Enable creation of NetworkPolicy resources.
  enabled: false
  # For Kubernetes v1.4, v1.5 and v1.6, use 'extensions/v1beta1'
  # For Kubernetes v1.7, use 'networking.k8s.io/v1'
  apiVersion: networking.k8s.io/v1
